{
    "contents" : "shinyServer(function(input, output, session){\n  \n  colorpal <- reactive({\n      input$clr\n  })\n  \n\n    \n  output$map <- renderLeaflet({\n    \n    leaflet(shp1) %>% addTiles() %>%\n    #leaflet() %>% addTiles() %>% \n      addProviderTiles(\"Thunderforest.Landscape\") %>%\n     # addGeoJSON(topoData, weight = 1, fill = FALSE) %>%\n      #fitBounds(17.13129, 55.34004, 30.14984, 69.04774)\n      addPolygons(popup = shp1$LNNAMN) %>%\n      fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)\n    \n  })\n  \n#   # Show a popup at the given location\n#   showZipcodePopup <- function(lat, lng, id) {\n#     leafletProxy(\"map\", data = shp1) %>% addPopups(lat, lng, paste(link, id))\n#   }\n#   \n  # When map is clicked, show a popup with city info\n  observe({\n    leafletProxy(\"map\", data = shp1) %>% clearPopups()\n    event <- input$map_shape_click  # pretty unclear why this one i s not clickable\n    \n    if (is.null(event))\n      return()\n    \n    isolate({\n      browser()\n      showZipcodePopup(event$lng, event$lat, event$properties$LNNAMN)\n    })\n  })\n  \n\n  observe({\n    \n    pal <- colorpal()\n#     \n#     leafletProxy(\"map\", data = shp1) %>%\n#       clearShapes() %>%\n#       #addCircles()\n#       addPolygons(\n#         stroke = FALSE, fillOpacity = 0.7, smoothFactor = 0.5,\n#         color = ~colorNumeric(pal, as.numeric(shp1$LNKOD))(as.numeric(LNKOD))\n#       )\n#     \n#    leafletProxy(\"map\", data = shp1) %>%\n#      clearShapes() %>%\n      #addCircles()\n#       addPolygons(\n#         stroke = FALSE, fillOpacity = 0.7, smoothFactor = 0.5,\n#         color = \"green\"#~colorNumeric(pal, as.numeric(shp1$LNKOD))(as.numeric(LNKOD))\n#       )\n     # addGeoJSON(topoData)\n\n  })\n# \n#   observe({\n#     proxy <- leafletProxy(\"map\", data = shp1)\n#     \n#     # Remove any existing legend, and only if the legend is\n#     # enabled, create a new one.\n#     proxy %>% clearControls()\n# #     if (input$clr) {\n# #       pal <- colorpal()\n# #       proxy %>% addLegend(position = \"bottomright\",\n# #                           pal = pal, values = ~mag\n# #       )\n#     # }\n#   })\n  \n  output$chart <- renderPlot({\n    plot(1:10, (1:10)^2)\n  })\n    \n}) ",
    "created" : 1453467919179.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4035554682",
    "id" : "A1EA917E",
    "lastKnownWriteTime" : 1453733181,
    "path" : "H:/Dokument/Git_repos/shiny/shinyMap/server.R",
    "project_path" : "server.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}
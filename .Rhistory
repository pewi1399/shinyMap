library(rgdal)
library(magrittr)
library(leaflet)
library(ggplot2)
library(maptools)
library(rCharts)
setwd("H:/Dokument/Git_repos/shiny/shinyMap")
# -------------------- get shapefile and reformat to geoJSON -------------------
#shp0 <- readOGR("data/Lan_SCB", layer = "Lansgranser_SCB_07")
#shp1 <- spTransform(shp0, CRS("+proj=longlat +datum=WGS84"))
# cant seem to find id- field
#shp1$id <- shp1$LNKOD
#writeOGR(shp1, 'lanMap.geojson','lanMap', driver='GeoJSON')
topoData <- readLines("lanMap.geojson") %>% paste(collapse = "\n")
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "#444444", fill = FALSE) %>%
#fitBounds(~min(long), ~min(lat), ~max(long), ~max(lat))
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
topoData
leaflet() %>%
addTiles() %>%
addGeoJSON(topoData, weight = 1, color = "#444444", fill = FALSE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "#444444", fill = FALSE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "#444444", fill = FALSE) %>%
#fitBounds(~min(long), ~min(lat), ~max(long), ~max(lat))
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
str(topoData)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "#444444", fill = FALSE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "#444444", fill = FALSE) %>%
fitBounds(17, 55, 36, 69)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "#444444", fill = FALSE) %>%
#fitBounds(~min(long), ~min(lat), ~max(long), ~max(lat))
fitBounds(17.13129, 55.34004, 30.14984, 69.04774)
shiny::runApp()
shiny::runApp()
str(topoData)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
leaflet(topoData) %>%
addGeoJSON()
leaflet() %>%
addGeoJSON(topodata)
leaflet() %>%
addGeoJSON(topoData)
shiny::runApp()
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "#444444", fill = FALSE) %>%
#fitBounds(17.13129, 55.34004, 30.14984, 69.04774)
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
topoData <- readLines("lanMap.geojson") %>% paste(collapse = "\n")
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "#444444", fill = FALSE) %>%
#fitBounds(17.13129, 55.34004, 30.14984, 69.04774)
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "#444444", fill = FALSE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "#444444", fill = FALSE) %>%
fitBounds(17.13129, 55.34004, 30.14984, 69.04774)
shiny::runApp()
shiny::runApp()
shiny::runApp()
event
0.025*1300000
*4
32500*4
shiny::runApp()
shiny::runApp()
shiny::runApp()
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = LNKOD, fill = FALSE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "LNKOD", fill = FALSE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "LNKOD", fill = TRUE)
topoData$features
topoData <- readLines("lanMap.geojson") %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
library(jsonlite)
topoData <- readLines("lanMap.geojson") %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
topoData$features
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "green", fill = TRUE)
topoData$features
topoData$style <- = list(
weight = 1,
color = "purple",
opacity = 1,
fillOpacity = 0.8
)
topoData$style = list(
weight = 1,
color = "purple",
opacity = 1,
fillOpacity = 0.8
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, color = "green", fill = TRUE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, fill = TRUE)
topoData$style = list(
weight = 1,
color = "purple",
opacity = 1,
fill = "purple",
fillOpacity = 0.8
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData, weight = 1, fill = TRUE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData$style = list(
weight = 1,
color = "red",
opacity = 1,
fillOpacity = 0.8
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData <- readLines("lanMap.geojson") %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData$style = list(
weight = 1,
color = "red",
fillColor = "yellow",
opacity = 1,
fillOpacity = 0.8,
)
topoData <- readLines("lanMap.geojson") %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
topoData$style = list(
weight = 1,
color = "red",
fillColor = "yellow",
opacity = 1,
fillOpacity = 0.8,
)
topoData$style = list(
weight = 1,
color = "red",
fillColor = "yellow",
opacity = 1,
fillOpacity = 0.8
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
shiny::runApp()
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData$style = list(
weight = 1,
color = "red",
fillColor = "yellow",
opacity = 1,
fillOpacity = 0.8
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData$style = list(
weight = 1,
color = "red",
fillColor = "cyan",
opacity = 1,
fillOpacity = 0.8
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData$style = list(
weight = 1,
color = "green",
fillColor = "cyan",
opacity = 1,
fillOpacity = 0.8
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData$style = list(
weight = 1,
color = "dodgerblue",
fillColor = "lightgrey",
opacity = 1,
fillOpacity = 0.8
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData$features
topoData$features$properties
feat$properties$LANDAREAKM
topoData$features
str(topoData$features)
topoData$features$properties$LNKOD
topoData$features <- lapply(topoData$features, function(feat){
feat$properties$style <- list(
fillColor = ifelse(as.numeric(as.character(feat$properties$LNKOD)) %% 2, "red", "green")
)
}
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData <- readLines("lanMap.geojson") %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData$style = list(
weight = 1,
color = "dodgerblue",
fillColor = "lightgrey",
opacity = 1,
fillOpacity = 0.8
)
topoData$features <- lapply(topoData$features, function(feat){
feat$properties$style <- list(
fillColor = "red"
)
}
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData <- readLines("lanMap.geojson") %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData$style = list(
weight = 1,
color = "dodgerblue",
fillColor = "lightgrey",
opacity = 1,
fillOpacity = 0.8
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
toptoData$style
topoData$style
runif(0,1)
runif(0,1,1)
runif(1,0,1)
lapply(topoData$features, function(x){
x$style <- ifelse(runif(1,0,1)>0.5, "green", "red")
})
topoData <- readLines("lanMap.geojson") %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData
topoData$style = list(
weight = 1,
color = "dodgerblue",
fillColor = "lightgrey",
opacity = 1,
fillOpacity = 0.8
)
topodata$features <- lapply(topoData$features, function(x){
x$style <- list(
fillColor = ifelse(runif(1,0,1)>0.5, "green", "red")
)
})
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topodata$features <- lapply(topoData$features, function(x){
x$style <- list(
fillColor = ifelse(runif(1,0,1)>0.5, "green", "red")
)
})
topoData$features <- lapply(topoData$features, function(x){
x$style <- list(
fillColor = ifelse(runif(1,0,1)>0.5, "green", "red")
)
})
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData <- readLines("lanMap.geojson") %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData
topoData$style = list(
weight = 1,
color = "dodgerblue",
fillColor = "lightgrey",
opacity = 1,
fillOpacity = 0.8
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData$features <- lapply(topoData$features, function(x){
x$properties$style <- list(
fillColor = ifelse(runif(1,0,1)>0.5, "green", "red")
)
})
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData <- readLines("lanMap.geojson") %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData
topoData$style = list(
weight = 1,
color = "dodgerblue",
fillColor = "lightgrey",
opacity = 1,
fillOpacity = 0.8
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData$features <- lapply(topoData$features, function(x){
x$properties$style <- list(
fillColor = ifelse(runif(1,0,1)>0.5, "green", "red")
)
x
})
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData <- readLines("lanMap.geojson") %>%
paste(collapse = "\n") %>%
fromJSON(simplifyVector = FALSE)
topoData$style = list(
weight = 1,
color = "dodgerblue",
fillColor = "lightgrey",
opacity = 1,
fillOpacity = 0.8
)
leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
addGeoJSON(topoData)
topoData$features <- lapply(topoData$features, function(x){
x$properties$style <- list(
fillColor = ifelse(runif(as.numeric(as.character(x$properties$LNKOD)) %% 2 == 1, "green", "red")
)
x
})
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shp0 <- readOGR("data/Lan_SCB", layer = "Lansgranser_SCB_07")
shp1 <- spTransform(shp0, CRS("+proj=longlat +datum=WGS84"))
str(shp0)
leaflet(shp1) %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
fitBounds(17.13129, 55.34004, 30.14984, 69.04774)
leaflet(shp1) %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
leaflet(shp1) %>% addTiles() %>%
addProviderTiles("Stamen") %>%
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
leaflet(shp1) %>% addTiles() %>%
addProviderTiles("Stamen") %>%
addPolygons()
leaflet(shp1) %>% addTiles() %>%
addProviderTiles("Stamen") %>%
addPolygons() %>%
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
leaflet(shp1) %>% addTiles() %>%
addProviderTiles("Stamen") %>%
addPolygons(popup = shp1$LANDAREAKM) %>%
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
leaflet(shp1) %>% addTiles() %>%
addProviderTiles("Stamen") %>%
addPolygons(popup = paste(shp1$LANDAREAKM)) %>%
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(rgdal)
library(magrittr)
library(leaflet)
library(ggplot2)
library(maptools)
library(rCharts)
library(jsonlite)
setwd("H:/Dokument/Git_repos/shiny/shinyMap")
# -------------------- get shapefile and reformat to geoJSON -------------------
shp0 <- readOGR("data/Lan_SCB", layer = "Lansgranser_SCB_07")
shp1 <- spTransform(shp0, CRS("+proj=longlat +datum=WGS84"))
leaflet(shp1) %>% addTiles() %>%
#leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
# addGeoJSON(topoData, weight = 1, fill = FALSE) %>%
#fitBounds(17.13129, 55.34004, 30.14984, 69.04774)
#addPolygons(popup = "gg") %>%
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
leaflet(shp1) %>% addTiles() %>%
#leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
# addGeoJSON(topoData, weight = 1, fill = FALSE) %>%
#fitBounds(17.13129, 55.34004, 30.14984, 69.04774)
addPolygons() %>%
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
shiny::runApp()
shiny::runApp()
rm(list=ls())
setwd("H:/Dokument/Git_repos/shiny/shinyMap")
# -------------------- get shapefile and reformat to geoJSON -------------------
shp0 <- readOGR("data/Lan_SCB", layer = "Lansgranser_SCB_07")
shp1 <- spTransform(shp0, CRS("+proj=longlat +datum=WGS84"))
leaflet(shp1) %>% addTiles() %>%
#leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
# addGeoJSON(topoData, weight = 1, fill = FALSE) %>%
#fitBounds(17.13129, 55.34004, 30.14984, 69.04774)
addPolygons() %>%
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
shiny::runApp()
shiny::runApp()
shiny::runApp()
leaflet(shp1) %>% addTiles() %>%
#leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
# addGeoJSON(topoData, weight = 1, fill = FALSE) %>%
#fitBounds(17.13129, 55.34004, 30.14984, 69.04774)
addPolygons(popup = "gg") %>%
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
event
renderLeaflet({
leaflet(shp1) %>% addTiles() %>%
#leaflet() %>% addTiles() %>%
addProviderTiles("Thunderforest.Landscape") %>%
# addGeoJSON(topoData, weight = 1, fill = FALSE) %>%
#fitBounds(17.13129, 55.34004, 30.14984, 69.04774)
addPolygons(popup = shp1$LNNAMN) %>%
fitBounds(~17.13129, ~55.34004, ~30.14984, ~69.04774)
})
observe({
leafletProxy("map", data = shp1) %>% clearPopups()
event <- input$map_shape_click  # pretty unclear why this one i s not clickable
if (is.null(event))
return()
isolate({
browser()
showZipcodePopup(event$lng, event$lat, event$properties$LNNAMN)
})
})
leafletProxy("map", data = shp1) %>% clearPopups()
event <- input$map_shape_click  # pretty unclear why this one i s not clickable
if (is.null(event))
return()
isolate({
browser()
showZipcodePopup(event$lng, event$lat, event$properties$LNNAMN)
shiny::runApp()
shiny::runApp()
shiny::runApp()
